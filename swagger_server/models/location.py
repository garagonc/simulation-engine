# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.coordinates import Coordinates  # noqa: F401,E501
from swagger_server.models.transformer import Transformer  # noqa: F401,E501
from swagger_server import util


class Location(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, coordinates: Coordinates=None, transformers: List[Transformer]=None):  # noqa: E501
        """Location - a model defined in Swagger

        :param name: The name of this Location.  # noqa: E501
        :type name: str
        :param coordinates: The coordinates of this Location.  # noqa: E501
        :type coordinates: Coordinates
        :param transformers: The transformers of this Location.  # noqa: E501
        :type transformers: List[Transformer]
        """
        self.swagger_types = {
            'name': str,
            'coordinates': Coordinates,
            'transformers': List[Transformer]
        }

        self.attribute_map = {
            'name': 'name',
            'coordinates': 'coordinates',
            'transformers': 'transformers'
        }

        self._name = name
        self._coordinates = coordinates
        self._transformers = transformers

    @classmethod
    def from_dict(cls, dikt) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Location of this Location.  # noqa: E501
        :rtype: Location
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Location.

        A textual identifier for the location e.g. Fur, Bolzano  # noqa: E501

        :return: The name of this Location.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Location.

        A textual identifier for the location e.g. Fur, Bolzano  # noqa: E501

        :param name: The name of this Location.
        :type name: str
        """

        self._name = name

    @property
    def coordinates(self) -> Coordinates:
        """Gets the coordinates of this Location.


        :return: The coordinates of this Location.
        :rtype: Coordinates
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: Coordinates):
        """Sets the coordinates of this Location.


        :param coordinates: The coordinates of this Location.
        :type coordinates: Coordinates
        """

        self._coordinates = coordinates

    @property
    def transformers(self) -> List[Transformer]:
        """Gets the transformers of this Location.


        :return: The transformers of this Location.
        :rtype: List[Transformer]
        """
        return self._transformers

    @transformers.setter
    def transformers(self, transformers: List[Transformer]):
        """Sets the transformers of this Location.


        :param transformers: The transformers of this Location.
        :type transformers: List[Transformer]
        """

        self._transformers = transformers
