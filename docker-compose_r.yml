version: '3'
services:
  redis:
    image: redis:latest
    container_name: "redis_S4G"
    command: redis-server
    ports:
      - "6379:6379"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    restart: "always"
  ofw:
    build:
      context: /Linksmart/optimization-framework
      dockerfile: Dockerfile
    image: garagon/optimization:amd
    container_name: "ofw"
    ports:
      - "8081:8080"
    depends_on:
      - redis
    volumes:
      - ./optimization-framework/prediction/resources:/usr/src/app/prediction/resources
      - ./optimization-framework/optimization/resources:/usr/src/app/optimization/resources
      - ./optimization-framework/logs:/usr/src/app/logs
      - ./optimization-framework/utils:/usr/src/app/utils
      - ./optimization-framework/logs/pyomo:/usr/src/app/logs/pyomo
      - ./optimization-framework/utils/gurobi/license:/usr/src/app/share/gurobi811/license

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    command: ["python3", "-u", "ofw.py"]
    restart: "always"
  ml:
    build:
      context: /Linksmart/optimization-framework
      dockerfile: prediction/docker/Dockerfile
    image: garagon/optimization:amd_training
    container_name: ml
    depends_on:
      - redis
    volumes:
      - ./optimization-framework/prediction/resources:/usr/src/app/prediction/resources
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    command: ["python3", "-u", "mlTraining.py"]
    restart: "always"
  se:
    build:
      context: ""
      dockerfile: Dockerfile
    image: garagon/simulation-engine:latest
    #image: garagon/simulation-engine:latest

    container_name: "se"
    depends_on:
      - redis
    volumes:
      - /c/Linksmart/simulation-engine/results:/usr/src/app/data
    ports:
      - "9091:9090"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    restart: "always"
    command: ["python3", "-u", "main.py"]

